Bootstrap: docker
From: nvidia/cuda:11.4.2-devel-ubuntu20.04

%post
export DEBIAN_FRONTEND=noninteractive
export  TZ=America/Los_Angeles
ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

apt-get update -qq \
    && apt-get install -yq --no-install-recommends \
        sudo \
        cmake \
        apt-utils \
        build-essential \
        pkg-config \
        git \
        ca-certificates \
        software-properties-common \
        vim \
        curl \
        language-pack-en-base \
        gdb \
        gfortran \
        libnetcdf-dev \
        libnetcdff-dev \
        bison # for yacc

add-apt-repository ppa:ubuntu-toolchain-r/test
apt-get update

add-apt-repository ppa:ubuntu-toolchain-r/test
apt-get update -qq \
    && apt-get install -yq --no-install-recommends \
        wget \
        gnuplot-nox \
        libgnuplot-iostream-dev \
        hdf5-tools \
        python3-dev \
        python3-h5py \
        python3-numpy \
        python3-scipy \
        python3-matplotlib \
        python3-pytest \
        python3-cffi \
	python-tk\
	dvipng\
	texlive-latex-extra\
        libthrust-dev \
        nco



git clone --depth=1 git://github.com/blitzpp/blitz.git
cd blitz
mkdir build
cd build
cmake .. -DCMAKE_INSTALL_PREFIX=/usr
make
sudo make install
cd ../../

wget http://ftp.pl.debian.org/debian/pool/main/p/python-gnuplot/python3-gnuplot_1.8-8_all.deb
sudo apt install ./python3-gnuplot_1.8-8_all.deb

# MPI - mvapich2-2.3.6
#export CXX=g++
#export CXX=gcc
wget http://mvapich.cse.ohio-state.edu/download/mvapich/mv2/mvapich2-2.3.6.tar.gz
tar xf mvapich2-2.3.6.tar.gz
cd mvapich2-2.3.6
./configure --disable-fortran --enable-cxx --enable-threads=multiple --with-device=ch3:sock CC=gcc CXX=g++
make -j4
make install
cd ..

export CXX=mpic++
export CC=mpicc

# Boost with Boost.MPI, boost installation based on https://github.com/boostorg/compute/blob/master/.travis.yml
wget https://boostorg.jfrog.io/artifactory/main/release/1.77.0/source/boost_1_77_0.tar.gz
tar xf boost_1_77_0.tar.gz
cd boost_1_77_0
# configure and install
#echo "using gcc : 5.4 : g++ ;" > $HOME/user-config.jam
echo "using python : 3.8 : /usr/bin/python3 ;" >> $HOME/user-config.jam
echo "using mpi : /usr/local/bin/mpicc ;" >> $HOME/user-config.jam
#echo "using mpi ;" >> $HOME/user-config.jam
cat $HOME/user-config.jam
./bootstrap.sh --with-libraries=chrono,regex,serialization,mpi,atomic,thread,date_time,system,iostreams,timer,filesystem,program_options,python
./b2 -d0 install
cd ..

# HDF5 with MPI
wget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.12/hdf5-1.12.1/src/hdf5-1.12.1.tar.gz
tar xf hdf5-1.12.1.tar.gz
cd hdf5-1.12.1
CXXFLAGS=-w CFLAGS=-w ./configure --enable-parallel --enable-cxx --enable-unsupported --enable-threadsafe --prefix=/usr/local
make -j4 || cat config.log
make install

# include Boost.Odeint fix for Thrust >= 1.10
git clone -b thrust_1_10_0 --depth=1 git://github.com/lhofmann/odeint.git
sudo cp -r odeint/include/boost/numeric/odeint/external/thrust/* /usr/local/include/boost/numeric/odeint/external/thrust/ 

# Help linker find Boost installation directory 
%environment
  export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
