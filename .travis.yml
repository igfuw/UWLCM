stages:
  - precache
  - test

language: cpp
os: 
    - linux
dist: xenial
compiler:
    - gcc
env:
    - TEST_SUITE=unit_iles MPI=none 
    - TEST_SUITE=unit_smg MPI=none
    - TEST_SUITE=moist_thermal MPI=none
    - TEST_SUITE=drawbicyc MPI=none
    - TEST_SUITE=moist_thermal MPI=mvapich2

cache:
  directories:
    - ${TRAVIS_BUILD_DIR}/deps/mvapich2-2.3b
    - ${TRAVIS_BUILD_DIR}/deps/boost
    - ${TRAVIS_BUILD_DIR}/deps/hdf5

addons:
  apt:
    packages:
      - g++-6
      - boost1.61
    sources: &sources
      - sourceline: 'ppa:rakhimov/boost'
#      - ubuntu-toolchain-r-test
#      - llvm-toolchain-trusty-4.0

notifications:
  email: false

before_install:
# to avoid python lib/interpreter mismatch; https://github.com/travis-ci/travis-ci/issues/5326
    - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then export PATH=$(echo $PATH | tr ':' "\n" | sed '/\/opt\/python/d' | tr "\n" ":" | sed "s|::|:|g"); fi
    - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then sudo add-apt-repository "deb http://us.archive.ubuntu.com/ubuntu/ xenial main universe multiverse restricted"; fi
    - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then export apt_get_install="apt-get install -t xenial --no-install-recommends -y"; fi
    - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then sudo apt-get update; fi

    # locally installed stuff comes first
    - export PATH=/usr/local/bin:$PATH

install:
# compile dependencies the same way as in libmpdata++
# TODO: now it downloads from mpi branch on pdziekan, change to master from igfuw once it's merged
    - wget https://raw.githubusercontent.com/pdziekan/libmpdataxx/distmem_merge_master/.travis_scripts/install_common.sh
    - chmod +x install_common.sh
    - . install_common.sh

#compiler
#    - if [[ $TRAVIS_OS_NAME == 'linux' && $CXX == 'g++'     ]]; then export CC=gcc-6; fi
#    - if [[ $TRAVIS_OS_NAME == 'linux' && $CXX == 'g++'     ]]; then export CXX=g++-6; fi

# cmake 
#    - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then wget https://github.com/Kitware/CMake/releases/download/v3.13.2/cmake-3.13.2-Linux-x86_64.sh; fi
#    - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then sudo sh cmake-3.13.2-Linux-x86_64.sh --prefix=/usr/local --exclude-subdir; fi

# recent boost is installed using addons functionality

#libcloudphxx dependencies
    - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then sudo $apt_get_install libblitz0-dev python-numpy python-scipy libthrust-dev python-pytest; fi

# newest thrust
    - git clone --depth=1 git://github.com/thrust/thrust.git;
    - sudo ln -s `pwd`/thrust/thrust /usr/local/include/thrust;

#libmpdataxx dependencies
    - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then sudo $apt_get_install gnuplot-nox; fi
    - sudo wget -O /usr/local/include/gnuplot-iostream.h https://raw.githubusercontent.com/dstahlke/gnuplot-iostream/master/gnuplot-iostream.h

# hdf5
##    - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then sudo $apt_get_install libhdf5-7; fi
#    - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then sudo $apt_get_install  -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" libpango-1.0-0 libpangocairo-1.0-0; fi
## we need hdf5-1.10 for h5diff --enable-error-stack, so we install it manually
#    - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then wget https://support.hdfgroup.org/ftp/HDF5/current/src/hdf5-1.10.5.tar; fi
#    - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then tar xf hdf5-1.10.5.tar; fi
#    - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then cd hdf5-1.10.5; fi
#    - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then CXXFLAGS=-w CFLAGS=-w ./configure --enable-cxx --enable-threadsafe --enable-unsupported --prefix=/usr; fi
#    - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then make; fi
#    - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then sudo make install; fi
#    - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then sudo ldconfig; fi
#    - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then cd ..; fi
##    - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then sudo $apt_get_install libhdf5-dev hdf5-tools; fi

before_script:
    - chmod +x ./.travis_scripts/*

script:

  # install libcloudphxx in RelWithDebInfo mode
  - cd ..
  - git clone --depth=1 git://github.com/igfuw/libcloudphxx.git
  - cd libcloudphxx
  - mkdir build
  - cd build
  - cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=RelWithDebInfo ..
  - make
  - sudo make install
  - cd ../..

  # install libmpdataxx
  - git clone --depth=1 git://github.com/igfuw/libmpdataxx.git
  - cd libmpdataxx/libmpdata++
  - mkdir build
  - cd build
  - cmake -DCMAKE_INSTALL_PREFIX=/usr ..
  - sudo make install
  - cd ../../..

  - cd UWLCM
  # run the unit tests
  - if [[ $TEST_SUITE == 'unit_iles' ]]; then . ./.travis_scripts/unit_iles.sh; fi
  - if [[ $TEST_SUITE == 'unit_smg' ]]; then . ./.travis_scripts/unit_smg.sh; fi
  # run the moist thermal test
  - if [[ $TEST_SUITE == 'moist_thermal' ]]; then . ./.travis_scripts/moist_thermal.sh; fi
  # test compilation of drawbicyc
  - if [[ $TEST_SUITE == 'drawbicyc' ]]; then . ./.travis_scripts/drawbicyc.sh; fi

# define the precache stage
# empty phases mean that default phases (before_install, install, ...) from the test stage are used (?)
# TODO: precache stage has a lot of unnecessary before_install and install code common to the (default) test stage;
#       add after_success, after_failure to precache, remove building of caches from the test stage, make the build error instead;

# YAML alias for the options common to precache jobs
job_info: &precache_default
  stage: precache
  os: linux
  dist: xenial
  language: cpp
  compiler: gcc
  install: 
# compile mpi dependencies the same way as in libmpdata++
# TODO: now it downloads from mpi branch on pdziekan, change to master from igfuw once it's merged
    - wget https://raw.githubusercontent.com/pdziekan/libmpdataxx/distmem_merge_master/.travis_scripts/install_common.sh
    - chmod +x install_common.sh
    - . install_common.sh
  script: echo "Preparing cache finished"

jobs:
  include:
    - <<: *precache_default
      env: TEST_SUITE=moist_thermal MPI=mvapich2

